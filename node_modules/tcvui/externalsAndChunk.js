const fs = require('fs')
var path = require('path')
var join = require('path').join;
const assign = require('object-assign');
var publicPath = {
    'default':{
        "_publicPath":'',
        'DEBUG':true
    },
    'debug':{
        "_publicPath":'http://js.40017.cn/touch/hb/c/2/vue/',
        'DEBUG':true
    },
    'production':{
        "_publicPath":'http://js.40017.cn/touch/hb/c/2/vue/',
        'DEBUG':false
    },
    'webproduction':{
       "_publicPath":'http://js.40017.cn/touch/hb/c/2/vue/',
        'DEBUG':false
    }
}
var publicPathKey = publicPath[process.env.NODE_ENV] ? process.env.NODE_ENV : publicPath['default'] ? 'default' : '';
var publicPathContent = publicPath[publicPathKey];


var argv;
try {    argv = JSON.parse(process.env.npm_config_argv).remain;} catch(ex) {    argv = process.argv;}
var contentText =  fs.readFileSync(
        path.join(path.resolve(__dirname, '..'), "tcvui/manifest.js"),{encoding:'utf-8'}     
      )
var pkg =  fs.readFileSync(
        path.join(path.resolve(__dirname, '../..'), "manifest.json"),{encoding:'utf-8'}     
      )
var components = JSON.parse(pkg).components;
var componentObj = {};
function parseChunks (){
  if(publicPathKey!='default'){
  var _obj = JSON.parse(contentText).sourceMap;
      componentObj['Vue'] = _obj['Vue'];
  for(var i = 0,len = components.length; i<len; i++){
     let _tmp = components[i];
    if(!!argv[0] && argv[0]=='touch' && _tmp =='bridge'){
             _tmp = 'h5bridge';
           }
     if(!!_obj[_tmp]){
        componentObj[_tmp] = _obj[_tmp];
     }
  }
  return componentObj;
 }else{
    return {};
 }
}
function parseExternals (components){
    if(typeof components === 'object'){
        var _obj = {},_4in1 = {};
        for(var i=0,len = components.length;i<len;i++){
          let _tmp = components[i];
            _4in1[_tmp] = _tmp;
        }
        _obj['tcvui'] = JSON.stringify(_4in1).replace(/\"/g, "");
        return _obj;
    }
    return false;
}

module.exports ={
  argv:argv,
  tcPath:publicPathContent._publicPath,
  publicPathContent:publicPathContent,
  tcChunk:publicPathKey!='default'?assign(JSON.parse(contentText).vendor,parseChunks()):{},
  tcExternals:assign({'vue':'Vue'},parseExternals(components))
}