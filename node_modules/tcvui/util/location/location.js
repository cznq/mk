import jsonp from '../jsonp/jsonp';
import utls from './gpsTransform';
const { wgs2gcj } = utls,
    CACHENAME = 'FedVueLocationInfoGps',
    config = {
        noAddress:undefined,
        time:false,
        locationType:'normal', // normal iframe
        useLocal:false
    },
    geocoderUrl = window.location.protocol.substring(0, 5) === "https" ? "https" : "http",
    _geocoderUrl = geocoderUrl + "://restapi.amap.com/v3/geocode/regeo?output=json&key=28d1d50ca96c06fff4e7f4f9b97ae239&radius=50&extensions=all";

let locationObj = {},
    IS_LOCATIONING = false,
    pipes = [];

 
function setHistoryLocation(data,type){ //设置缓存
    if(!data){
        return;
    }
    try{
        var hData = $.extend({time:new Date()},data);
        localStorage.setItem(CACHENAME,JSON.stringify(hData));
    }catch(e){
    }
}
function timeCompare(time,milliSeconds){ //时间差比较
    if(time === true){
        return true;
    }
    if(new Date().getTime() - time.getTime() < milliSeconds){
        return true;
    }else{
        return false;
    }
}
//根据参数要求获取符合要求的缓存定位数据
function getLocationInfo(configs){
    if(configs.time){
        let gpsInfo;
        try{
            gpsInfo = Object.prototype.toString.call(locationObj.gpsInfo) === "[object Object]" ? locationObj.gpsInfo : JSON.parse(localStorage.getItem(CACHENAME));
        }catch(e){
            gpsInfo = false
        }
        // 时间满足  同时根据是否需要详细信息 有过需要 但是缓存没有 那就得重新来
        if(gpsInfo && timeCompare(gpsInfo.time,configs.time * 1000) && ((!configs.noAddress && gpsInfo.city) || configs.noAddress) ){
            return gpsInfo;
        }else{
            return false;
        }
    }else{
        return false;
    }
}
function executePipes(info,type){
    for(let i = pipes.length;pipes.length > 0;){
        if(type === false){
            pipes[0][1](info)
        }else{
            pipes[0][0](info)
        }
        pipes.shift()
    }
}

 
/**param 
    * gps定位，如果需要获得地址信息的话，需要引入baidu map的API，默认是获取城市地址的，
    * 如果不需要地址信息，noAddress参数传递true，表示只获取经纬度
    *  latitude  {number}  纬度
    *  longitude  {number}  经度

    * noAddress  {boolean}  可选，不需要地址，只要经纬度
    * 
    * options  {object}  可选，定位用到的参数，默认为
    *  {
    *      enableHighAccuracy: true,
    *      maximumAge: 30000,
    *      timeout: 5000
    *  }
**/
function location(param){
    return new Promise((resolve, reject) => {
        if (!navigator.geolocation){
            resolve({
                tips: "浏览器不支持定位"
            })
        }else{
            pipes.push([resolve,reject,(param && param.noAddress)])
            locations(param);
        }
    });
}

function locations(param){
    let locOptions = {
            enableHighAccuracy: true,
            maximumAge: 30000,
            timeout: 12000
        };
    
    param = {...config,...param};
           
    param.options = {...locOptions ,...param.options}

    let locinfo = getLocationInfo(param); // 读取符合要求的缓存定位信息

    if(locinfo){
        executePipes(locinfo)
        return;
    }
    if(IS_LOCATIONING){return}
    IS_LOCATIONING = true;
    if(navigator.userAgent.toLowerCase().indexOf("micromessenger") != -1){
        param.locationType = 'wx'
    }
    switch(param.locationType){
        case 'wx':
           wxLocation(param);
        break;
        case 'iframe':
            iframeLocation(param)
        break;
        default :
            navigator.geolocation.getCurrentPosition(function(position){
                showPosition(position,param)
            },function(er){
                showError(er)
            }, param.options);
        break;
    }
}
function iframeLocation(param){
    window.touch4in1H5LocationCallback = function(err,position){
        if(err == null){
            showPosition(position,param)
        }else{
            showError(err)
        }
        document.body.removeChild(locationDiv)
    }
    let locationDiv = document.createElement('div');
    locationDiv.id = "VUE4in1H5LocationIframe";
    var childStr = '<iframe src="javascript:(function(){ window.navigator.geolocation.getCurrentPosition(function(position){parent && parent.touch4in1H5LocationCallback && parent.touch4in1H5LocationCallback(null,position);}, function(err){parent && parent.touch4in1H5LocationCallback && parent.touch4in1H5LocationCallback(err);}, {enableHighAccuracy : '+ param.options.enableHighAccuracy +', maximumAge : '+ param.options.maximumAge +', timeout :'+ param.options.timeout +'});})()" style="display:none;"></iframe>'
    locationDiv.innerHTML = childStr;
    document.body.appendChild(locationDiv)
}
function wxLocation(param){

    jsonp('https://3gimg.qq.com/lightmap/components/geolocation/geolocation.min.js',{type:'script'}).then(function(){

        //RPQBZ-MTURW-AA5RF-R6KKP-QXJL5-DGFDW  公司账号key
        //ILFBZ-L5QR6-OJSSD-EZ4IN-WDIAE-GXBKY
        var geolocation = new qq.maps.Geolocation("RPQBZ-MTURW-AA5RF-R6KKP-QXJL5-DGFDW", "tctravel");
        geolocation.getLocation(function(data){
            TXMapCallback(data,param)
        }, function(data){
            TXMapCallback()
        }, {
            timeout:param.options.timeout
        })
    })
}
function TXMapCallback(data,param){
        data = data || {};
        if(!data || !data.lat){
            executePipes({
                tips:"获取地址信息失败"
            },false)
            IS_LOCATIONING = false
            return 
        }
        if (param.noAddress) { // 只需要经纬度的情况直接返回
            executePipes({
                latitude: data.lat,
                longitude: data.lng
            });
            IS_LOCATIONING = false
            return;
        }
        if(!data.city){ // 如果定位有经纬度 没有城市名
            getInfoFormGaode(data.lng + "," + data.lat,data);
            return;
        }
        data.h5LocationType = 'tx';
        if(config.needPoi){
            getInfoFormGaode(data.lng + "," + data.lat,data)
        }else{
            getTcCityInfo(data)
        }
        // 
    }
function showPosition (position,param ) { //成功获取gps坐标回调
    let _location = {
        latitude: position.coords.latitude,
        longitude: position.coords.longitude
    };
    
    if (param.noAddress) { // 只需要经纬度的情况直接返回
        executePipes(_location)
        return;
    }
    var poi = wgs2gcj({
        lat:_location.latitude,
        lng:_location.longitude
    });
    _location.lng = poi.lng;
    _location.lat = poi.lat;
    
    getInfoFormGaode(poi.lng + "," + poi.lat,_location)
}
function getInfoFormGaode(locStr,location){
    jsonp(_geocoderUrl + "&location=" + locStr).then(function(data){  //+ 
        if (data.status == 1) {
            var _CITYNAME = location.city;
            location = {
                ...location,...data.regeocode.addressComponent,
                formatted_address: data.regeocode.formatted_address
            }
            
            if(typeof location.city !== 'string'){ //cityname 处理
                if(typeof _CITYNAME === 'string'){
                    location.city = _CITYNAME;
                }else if(location.province.indexOf('市') !== -1){
                    location.city = location.province;
                }else{
                    location.city = location.district;
                }
            }
            getTcCityInfo(location)
        } else {
            location.tips = "获取地址信息失败";
            executePipes(location,false)
        }
    },function(){
        IS_LOCATIONING = false
    })
}

function getTcCityInfo(location){
    jsonp(geocoderUrl + '://appnew.ly.com/fed/AjaxHelper/getLocationAdress.ashx',{
        data:{
            cityName:location.city,
            lat:location.lat,
            lng:location.lng
        }
    }).then(function(data){
        if(data && data.response && data.response.body && data.response.body.cityId){
            location = {...location,...data.response.body}
            locationObj.gpsInfo = {time:new Date(),...location};
            setHistoryLocation(location);
        }else{
            location.cityId = false;
        }
        executePipes(location)
        IS_LOCATIONING = false;
    },function(){
        IS_LOCATIONING = false
    })
}
function showError (error){
    var loc = {};
    loc.reject = true;
    switch (error.code) {
    case error.PERMISSION_DENIED:
        loc.tips = "用户拒绝获取地理位置";
        break;
    case error.POSITION_UNAVAILABLE:
        loc.tips = "位置信息不可用";
        break;
    case error.TIMEOUT:
        loc.tips = "获取用户位置请求超时";
        break;
    case error.UNKNOWN_ERROR: //出现位置错误
        loc.tips = "获取位置失败，请重试";
        break;
    }
    executePipes(loc,false);
    IS_LOCATIONING = false;
}
export default location;

   /**param 
    * 
    * noAddress  {boolean}  可选，不需要地址和城市信息，只要经纬度
    * time       {number}   允许获取多长时间内的在内存中缓存数据（单位：秒），可配置false or 0 表示不获取缓存数据（用户已定位过，但是如果网页进行过跳转或者刷新，将不会有缓存数据）
    * useLocal   {boolean}  允许获取本地缓存中的定位数据，需要配置time（默认为false）
    * options    {object}   可选，定位用到的参数
    *  {
    *      enableHighAccuracy: true,
    *      maximumAge: 30000,
    *      timeout: 5000
    *  }
**/